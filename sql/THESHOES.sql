-- 시퀀스 생성
DROP SEQUENCE SEQ_COMMENTS_CODE;
DROP SEQUENCE SEQ_BOARD_CODE;
DROP SEQUENCE SEQ_EVENT_CODE;
DROP SEQUENCE SEQ_CS_BOARD_CODE;
DROP SEQUENCE SEQ_ADDRESS_CODE;
DROP SEQUENCE SEQ_SHOES_THUMB_CODE;
DROP SEQUENCE SEQ_CS_BOARD_FILE_CODE;

CREATE SEQUENCE SEQ_COMMENTS_CODE
START WITH 1;
DROP SEQUENCE SEQ_RT_CODE;
DROP SEQUENCE SEQ_ST_CODE;
DROP SEQUENCE SEQ_CATEGORY_FAQ_CODE;
DROP SEQUENCE SEQ_CATEGORY_NOTICE_CODE;
DROP SEQUENCE SEQ_SHOES_CATEGORY_CODE;
DROP SEQUENCE SEQ_SHOES_CODE;
DROP SEQUENCE SEQ_CATEGORY_RESELL_CODE;
CREATE SEQUENCE SEQ_BOARD_CODE
START WITH 1;
CREATE SEQUENCE SEQ_EVENT_CODE
START WITH 1;
CREATE SEQUENCE SEQ_CS_BOARD_CODE
START WITH 1;
CREATE SEQUENCE SEQ_SHOES_CATEGORY_CODE
START WITH 1;
CREATE SEQUENCE SEQ_SHOES_CODE
START WITH 1;
CREATE SEQUENCE SEQ_RT_CODE
START WITH 1;
CREATE SEQUENCE SEQ_ST_CODE
START WITH 1;
CREATE SEQUENCE SEQ_CATEGORY_FAQ_CODE
START WITH 1;
CREATE SEQUENCE SEQ_CATEGORY_NOTICE_CODE
START WITH 1;
CREATE SEQUENCE SEQ_CATEGORY_RESELL_CODE
START WITH 1;
CREATE SEQUENCE SEQ_ADDRESS_CODE
START WITH 1;
CREATE SEQUENCE SEQ_SHOES_THUMB_CODE
START WITH 1;
CREATE SEQUENCE SEQ_CS_BOARD_FILE_CODE
START WITH 1;

-- 테이블 생성
DROP TABLE RESELL_THUMB CASCADE CONSTRAINTS;
DROP TABLE COMMENTS CASCADE CONSTRAINTS;
DROP TABLE BOARD_CATEGORY CASCADE CONSTRAINTS;
DROP TABLE WINNER CASCADE CONSTRAINTS;
DROP TABLE BOARD CASCADE CONSTRAINTS;
DROP TABLE RESELL_TRADE CASCADE CONSTRAINTS;
DROP TABLE MANAGER CASCADE CONSTRAINTS;
DROP TABLE EVENT CASCADE CONSTRAINTS;
DROP TABLE CS_BOARD CASCADE CONSTRAINTS;
DROP TABLE CS_BOARD_FILE CASCADE CONSTRAINTS;
DROP TABLE SHOES_CATEGORY CASCADE CONSTRAINTS;
DROP TABLE SHOES_INFO CASCADE CONSTRAINTS;
DROP TABLE WISHLIST CASCADE CONSTRAINTS;
DROP TABLE SHOES_THUMB CASCADE CONSTRAINTS;
DROP TABLE MEMBER CASCADE CONSTRAINTS;
DROP TABLE ADDRESS CASCADE CONSTRAINTS;

CREATE TABLE MEMBER (
	MEMBER_ID	VARCHAR2(30)		NOT NULL,
	NAME	VARCHAR2(30)		NOT NULL,
	PWD	VARCHAR2(255)		NOT NULL,
	EMAIL	VARCHAR2(50)		NOT NULL UNIQUE,
	PHONE_NO	VARCHAR2(30)		NOT NULL UNIQUE,
	ENROLL_DATE	DATE		NOT NULL,
	BLACK_REASON	VARCHAR2(100)		NULL,
	BLACKLIST_YN	VARCHAR2(1)	DEFAULT 'N'	NOT NULL,
	WITHDRAW_YN	VARCHAR2(1)	DEFAULT 'N'	NOT NULL,
	BIRTH	VARCHAR2(30)		NOT NULL,
    ROLE VARCHAR2(30) NOT NULL,
    CONSTRAINT UK_BLACKLIST_YN CHECK(BLACKLIST_YN IN ('Y', 'N')),
    CONSTRAINT UK_WITHDRAW_YN CHECK(WITHDRAW_YN IN ('Y', 'N'))
);

COMMENT ON COLUMN MEMBER.MEMBER_ID IS '아이디';
COMMENT ON COLUMN MEMBER.NAME IS '이름';
COMMENT ON COLUMN MEMBER.PWD IS '비밀번호';
COMMENT ON COLUMN MEMBER.EMAIL IS '이메일';
COMMENT ON COLUMN MEMBER.PHONE_NO IS '휴대폰번호';
COMMENT ON COLUMN MEMBER.ENROLL_DATE IS '가입일자';
COMMENT ON COLUMN MEMBER.BLACK_REASON IS '블랙리스트 사유';
COMMENT ON COLUMN MEMBER.BLACKLIST_YN IS '블랙리스트 여부';
COMMENT ON COLUMN MEMBER.WITHDRAW_YN IS '탈퇴여부';
COMMENT ON COLUMN MEMBER.BIRTH IS '생년월일';
COMMENT ON COLUMN MEMBER.ROLE IS '생년월일';

CREATE TABLE BOARD (
	BOARD_NO	NUMBER		NOT NULL,
	BOARD_ID	VARCHAR2(30)		NOT NULL,
	BOARD_CATEGORY_NO	NUMBER		NOT NULL,
	BOARD_TITLE	VARCHAR2(100)		NOT NULL,
	BOARD_CONTENT	CLOB		NOT NULL,
	BOARD_REGDATE	DATE		NOT NULL,
	BOARD_HIT	NUMBER DEFAULT 0	NOT NULL,
	CATEGORY_ORDER	NUMBER		NOT NULL
);

COMMENT ON COLUMN BOARD.BOARD_NO IS '게시글 번호';
COMMENT ON COLUMN BOARD.BOARD_ID IS '아이디';
COMMENT ON COLUMN BOARD.BOARD_CATEGORY_NO IS '게시글 카테고리 번호';
COMMENT ON COLUMN BOARD.BOARD_TITLE IS '제목';
COMMENT ON COLUMN BOARD.BOARD_CONTENT IS '내용';
COMMENT ON COLUMN BOARD.BOARD_REGDATE IS '작성일자';
COMMENT ON COLUMN BOARD.BOARD_HIT IS '조회수';
COMMENT ON COLUMN BOARD.CATEGORY_ORDER IS '카테고리별 순서';

CREATE TABLE EVENT (
	EVENT_NO	NUMBER		NOT NULL,
	EVENT_ID	VARCHAR2(30)		NOT NULL,
	EVENT_SHOES_ID	NUMBER		NOT NULL,
	EVENT_DATE	DATE		NOT NULL,
	RANDOM_NO	NUMBER		NOT NULL,
	EVENT_STATUS	VARCHAR2(1)	NOT NULL,
    CONSTRAINT UK_EVENT_STATUS CHECK(EVENT_STATUS IN ('1', '2', '3', '4', '5'))
);

COMMENT ON COLUMN EVENT.EVENT_NO IS '응모번호';
COMMENT ON COLUMN EVENT.EVENT_ID IS '상품명';
COMMENT ON COLUMN EVENT.EVENT_SHOES_ID IS '응모신발번호';
COMMENT ON COLUMN EVENT.EVENT_DATE IS '응모일자';
COMMENT ON COLUMN EVENT.RANDOM_NO IS '랜덤우선순위';
COMMENT ON COLUMN EVENT.EVENT_STATUS IS '응모상태(1:미당첨, 2:구매안함, 3:구매함 4:배송중 5:배송완료)';

CREATE TABLE WISHLIST (
   WISH_NO   NUMBER      NOT NULL,
   WISH_ID   VARCHAR2(30)      NOT NULL
);

COMMENT ON COLUMN WISHLIST.WISH_NO IS '목록 번호';
COMMENT ON COLUMN WISHLIST.WISH_ID IS '아이디';

CREATE TABLE MANAGER (
	MANAGER_ID	VARCHAR2(30)		NOT NULL,
	MANAGER_PWD	VARCHAR2(30)		NOT NULL
);

COMMENT ON COLUMN MANAGER.MANAGER_ID IS '관리자 아이디';
COMMENT ON COLUMN MANAGER.MANAGER_PWD IS '관리자 비밀번호';

CREATE TABLE BOARD_CATEGORY (
	CATEGORY_NO	NUMBER		NOT NULL,
	CATEGORY_NAME	VARCHAR2(30)		NOT NULL
);

COMMENT ON COLUMN BOARD_CATEGORY.CATEGORY_NO IS '게시글카테고리 번호';
COMMENT ON COLUMN BOARD_CATEGORY.CATEGORY_NAME IS '카테고리명';

CREATE TABLE SHOES_INFO (
	SHOES_NO	NUMBER		NOT NULL,
	INFO_CATEGORY_NO	NUMBER		NOT NULL,
	SHOES_MODEL	VARCHAR2(50)		NOT NULL,
	SHOES_PRICE	NUMBER		NOT NULL,
	SALES_YN	VARCHAR2(1)	DEFAULT 'Y'	NOT NULL,
	SALES_AMOUNT	NUMBER	DEFAULT 0	NOT NULL,
	REAMANING_AMOUNT	NUMBER		NOT NULL,
    START_DATE	DATE		NOT NULL,
    END_DATE	DATE		NOT NULL,
    WINNER_DATE	DATE		NOT NULL,
    EVENT_END_YN VARCHAR2(1) DEFAULT 'N' NOT NULL,
    CONSTRAINT UK_SALES_YN CHECK(SALES_YN IN ('Y', 'N')),
    CONSTRAINT UK_EVENT_END_YN CHECK(EVENT_END_YN IN ('Y', 'N'))
);

COMMENT ON COLUMN SHOES_INFO.SHOES_NO IS '신발번호';
COMMENT ON COLUMN SHOES_INFO.INFO_CATEGORY_NO IS '신발카테고리번호';
COMMENT ON COLUMN SHOES_INFO.SHOES_MODEL IS '모델명';
COMMENT ON COLUMN SHOES_INFO.SHOES_PRICE IS '발매가';
COMMENT ON COLUMN SHOES_INFO.SALES_YN IS '판매 여부';
COMMENT ON COLUMN SHOES_INFO.SALES_AMOUNT IS '판매수량';
COMMENT ON COLUMN SHOES_INFO.REAMANING_AMOUNT IS '잔여수량';
COMMENT ON COLUMN SHOES_INFO.START_DATE IS '응모 시작일';
COMMENT ON COLUMN SHOES_INFO.END_DATE IS '응모 종료일';
COMMENT ON COLUMN SHOES_INFO.WINNER_DATE IS '당첨자 발표일';

CREATE TABLE SHOES_CATEGORY (
	SHOES_CATEGORY_NO	NUMBER		NOT NULL,
	SHOES_CATEGORY_NAME	VARCHAR2(30)		NOT NULL
);

COMMENT ON COLUMN SHOES_CATEGORY.SHOES_CATEGORY_NO IS '신발카테고리번호';
COMMENT ON COLUMN SHOES_CATEGORY.SHOES_CATEGORY_NAME IS '신발카테고리명';

CREATE TABLE WINNER (
	WINNER_ID	VARCHAR2(30)		NOT NULL,
	WINNER_NO	NUMBER		NOT NULL,
	WINNER_YN	VARCHAR2(1)	DEFAULT 'Y'	NOT NULL,
	WINNER_DEADLINE	DATE		NOT NULL,
    CONSTRAINT UK_WINNER_YN CHECK(WINNER_YN IN ('Y', 'N')),
    DELIVERY_CODE	VARCHAR2(250)	NULL,
	DELIVERY_DETAIL	VARCHAR2(250)	NULL
);

COMMENT ON COLUMN WINNER.WINNER_ID IS '아이디';
COMMENT ON COLUMN WINNER.WINNER_NO IS '응모 번호';
COMMENT ON COLUMN WINNER.WINNER_YN IS '구매 상태';
COMMENT ON COLUMN WINNER.WINNER_DEADLINE IS '구매 기한';

CREATE TABLE COMMENTS (
   COMMENTS_NO   NUMBER      NOT NULL,
    COMMENTS_ID VARCHAR2(30) NOT NULL,
   BOARD_COMMENTS_NO   NUMBER      NOT NULL,
   COMMENTS_CONTENT   CLOB      NOT NULL,
   COMMENTS_YN   VARCHAR2(1)   DEFAULT 'Y'   NOT NULL,
   COMMENTS_REGDATE   DATE      NOT NULL,
    CONSTRAINT UK_COMMENTS_YN CHECK(COMMENTS_YN IN ('Y', 'N'))
);


COMMENT ON COLUMN COMMENTS.COMMENTS_NO IS '댓글번호';
COMMENT ON COLUMN COMMENTS.BOARD_COMMENTS_NO IS '게시글번호';
COMMENT ON COLUMN COMMENTS.COMMENTS_CONTENT IS '댓글내용';
COMMENT ON COLUMN COMMENTS.COMMENTS_YN IS '공개여부';
COMMENT ON COLUMN COMMENTS.COMMENTS_REGDATE IS '등록일자';

CREATE TABLE RESELL_TRADE (
	RT_NO	NUMBER		NOT NULL,
	RT_BUYER	VARCHAR2(30)		NOT NULL,
	RT_CONTENT	CLOB		NOT NULL,
	RT_REGDATE	DATE		NOT NULL
);

COMMENT ON COLUMN RESELL_TRADE.RT_NO IS '게시글 번호';
COMMENT ON COLUMN RESELL_TRADE.RT_BUYER IS '구매자';
COMMENT ON COLUMN RESELL_TRADE.RT_CONTENT IS '후기 내용';
COMMENT ON COLUMN RESELL_TRADE.RT_REGDATE IS '작성일자';

CREATE TABLE CS_BOARD (
	CS_NO	NUMBER		NOT NULL,
	CS_ID	VARCHAR2(30)		NOT NULL,
	CS_TITLE	VARCHAR2(100)		NOT NULL,
	CS_CONTENT	CLOB		NOT NULL,
	CS_REGDATE	DATE		NOT NULL
);

COMMENT ON COLUMN CS_BOARD.CS_NO IS '게시글 번호';
COMMENT ON COLUMN CS_BOARD.CS_ID IS '아이디';
COMMENT ON COLUMN CS_BOARD.CS_TITLE IS '제목';
COMMENT ON COLUMN CS_BOARD.CS_CONTENT IS '내용';
COMMENT ON COLUMN CS_BOARD.CS_REGDATE IS '작성일자';

-- CS_BOARD_FILE 수정
CREATE TABLE CS_BOARD_FILE (
    CS_FILE_NO NUMBER NOT NULL,
    CS_BOARD_NO NUMBER NOT NULL,
    CS_ORIGINAL_NAME VARCHAR2(255) NOT NULL,
    CS_SAVED_NAME VARCHAR2(255) NOT NULL,
    CS_SAVE_PATH VARCHAR2(1000) NOT NULL,
    CS_FILE_TYPE VARCHAR2(5),
    CS_THUMBNAIL_PATH VARCHAR2(255),
    CS_ATTACHMENT_STATUS VARCHAR2(1) DEFAULT 'Y'
);

ALTER TABLE MEMBER ADD CONSTRAINT PK_MEMBER PRIMARY KEY (
	MEMBER_ID
);

ALTER TABLE BOARD ADD CONSTRAINT PK_BOARD PRIMARY KEY (
	BOARD_NO
);

ALTER TABLE EVENT ADD CONSTRAINT PK_EVENT PRIMARY KEY (
	EVENT_NO
);

ALTER TABLE WISHLIST ADD CONSTRAINT PK_WISHLIST PRIMARY KEY (
   WISH_NO,
    WISH_ID
);

ALTER TABLE MANAGER ADD CONSTRAINT PK_MANAGER PRIMARY KEY (
	MANAGER_ID
);

ALTER TABLE BOARD_CATEGORY ADD CONSTRAINT PK_BOARD_CATEGORY PRIMARY KEY (
	CATEGORY_NO
);

ALTER TABLE SHOES_INFO ADD CONSTRAINT PK_SHOES_INFO PRIMARY KEY (
	SHOES_NO
);

ALTER TABLE SHOES_CATEGORY ADD CONSTRAINT PK_SHOES_CATEGORY PRIMARY KEY (
	SHOES_CATEGORY_NO
);

ALTER TABLE SHOES_INFO ADD CONSTRAINT FK_SC_TO_SHOES_INFO_1 FOREIGN KEY (
	INFO_CATEGORY_NO
)
REFERENCES SHOES_CATEGORY (
	SHOES_CATEGORY_NO
);

ALTER TABLE WINNER ADD CONSTRAINT PK_WINNER PRIMARY KEY (
	WINNER_ID,
    WINNER_NO
);

ALTER TABLE COMMENTS ADD CONSTRAINT PK_COMMENT PRIMARY KEY (
	COMMENTS_NO
);

ALTER TABLE CS_BOARD ADD CONSTRAINT PK_CS_BOARD PRIMARY KEY (
	CS_NO
);

ALTER TABLE CS_BOARD ADD CONSTRAINT FK_MEMBER_TO_CS_BOARD_1 FOREIGN KEY (
	CS_ID
)
REFERENCES MEMBER (
	MEMBER_ID
);

ALTER TABLE CS_BOARD_FILE ADD CONSTRAINT PK_CS_BOARD_FILE PRIMARY KEY (
    CS_FILE_NO,
    CS_BOARD_NO
);

ALTER TABLE CS_BOARD_FILE ADD CONSTRAINT FK_CS_TO_CSFILE_1 FOREIGN KEY (
   CS_BOARD_NO
)
REFERENCES CS_BOARD (
   CS_NO
);

ALTER TABLE WINNER ADD CONSTRAINT FK_MEMBER_TO_WINNER_1 FOREIGN KEY (
	WINNER_ID
)
REFERENCES MEMBER (
	MEMBER_ID
);

ALTER TABLE WINNER ADD CONSTRAINT FK_MEMBER_TO_WINNER_2 FOREIGN KEY (
	WINNER_NO
)
REFERENCES EVENT (
	EVENT_NO
);

ALTER TABLE EVENT ADD CONSTRAINT FK_MEMBER_TO_EVENT_1 FOREIGN KEY (
	EVENT_ID
)
REFERENCES MEMBER (
	MEMBER_ID
);

ALTER TABLE EVENT ADD CONSTRAINT FK_SHOES_INFO_TO_EVENT_1 FOREIGN KEY (
	EVENT_SHOES_ID
)
REFERENCES SHOES_INFO (
	SHOES_NO
);

ALTER TABLE RESELL_TRADE ADD CONSTRAINT FK_BOARD_TO_RESELL_TRADE_1 FOREIGN KEY (
	RT_NO
)
REFERENCES BOARD (
	BOARD_NO
);

ALTER TABLE RESELL_TRADE ADD CONSTRAINT FK_MEMBER_TO_RESELL_TRADE_1 FOREIGN KEY (
	RT_BUYER
)
REFERENCES MEMBER (
	MEMBER_ID
);

ALTER TABLE CS_BOARD_FILE ADD CONSTRAINT FK_CS_BOARD_TO_CS_BOARD_FILE_1 FOREIGN KEY (
	CS_FILE_NO
)
REFERENCES CS_BOARD (
	CS_NO
);

REFERENCES SHOES_INFO (
	SHOES_NO
);

ALTER TABLE COMMENTS ADD CONSTRAINT FK_BOARD_TO_COMMENTS_1 FOREIGN KEY (
   BOARD_COMMENTS_NO
)
REFERENCES BOARD (
   BOARD_NO
);

ALTER TABLE COMMENTS ADD CONSTRAINT FK_MEMBER_TO_COMMENTS_1 FOREIGN KEY (
    COMMENTS_ID
)
REFERENCES MEMBER (
    MEMBER_ID
);

ALTER TABLE BOARD ADD CONSTRAINT FK_BOARD_CATEGORY_TO_BOARD_1 FOREIGN KEY (
	BOARD_CATEGORY_NO
)
REFERENCES BOARD_CATEGORY (
	CATEGORY_NO
);

ALTER TABLE BOARD ADD CONSTRAINT FK_MEMBER_TO_BOARD_3 FOREIGN KEY (
	BOARD_ID
)
REFERENCES MEMBER (
	MEMBER_ID
);

ALTER TABLE WISHLIST ADD CONSTRAINT FK_MEMBER_TO_WISHLIST_3 FOREIGN KEY (
   WISH_ID
)
REFERENCES MEMBER (
   MEMBER_ID
);

ALTER TABLE WISHLIST ADD CONSTRAINT FK_SHOES_INFO_TO_WISHLIST_3 FOREIGN KEY (
   WISH_NO
)
REFERENCES SHOES_INFO (
   SHOES_NO
);

CREATE TABLE RESELL_THUMB (
   RT_NO   NUMBER      NOT NULL,
   RESELL_THUMB_NO NUMBER NOT NULL,
   RESELL_ORIGINAL_NAME   VARCHAR2(255)      NOT NULL,
    RESELL_SAVED_NAME VARCHAR2(255) NOT NULL,
    RESELL_SAVE_PATH VARCHAR2(1000) NOT NULL,
    RESELL_FILE_TYPE VARCHAR2(5),
    RESELL_THUMBNAIL_PATH VARCHAR2(255),
    RESELL_ATTACHMENT_STATUS VARCHAR2(1) DEFAULT 'Y'
);

ALTER TABLE RESELL_THUMB ADD CONSTRAINT PK_RESELL_THUMB PRIMARY KEY (
    RT_NO
  , RESELL_THUMB_NO
);

ALTER TABLE RESELL_THUMB ADD CONSTRAINT FK_BOARD_NO FOREIGN KEY (
   RT_NO
)
REFERENCES BOARD (
   BOARD_NO
);

CREATE TABLE SHOES_THUMB (
    SHOES_THUMB_NO NUMBER NOT NULL,
	ST_NO	NUMBER		NOT NULL,
	ORIGINAL_NAME	VARCHAR2(255)		NOT NULL,
    SAVED_NAME VARCHAR2(255) NOT NULL,
    SAVE_PATH VARCHAR2(1000) NOT NULL,
    FILE_TYPE VARCHAR2(5),
    THUMBNAIL_PATH VARCHAR2(255),
    ATTACHMENT_STATUS VARCHAR2(1) DEFAULT 'Y'
);

ALTER TABLE SHOES_THUMB ADD CONSTRAINT PK_SHOES_THUMB PRIMARY KEY (
	SHOES_THUMB_NO,
    ST_NO
);

ALTER TABLE SHOES_THUMB ADD CONSTRAINT FK_INFO_TO_THUMB_1 FOREIGN KEY (
	ST_NO
)
REFERENCES SHOES_INFO (
	SHOES_NO
);


CREATE TABLE ADDRESS (
    ADDRESS_NO NUMBER,
    ADDRESS_ID VARCHAR2(30) NOT NULL,
    ADDRESS_ZIP VARCHAR2(255) NOT NULL,
    ADDRESS_DETAIL VARCHAR2(255) NOT NULL,
    ADDRESS_NAME VARCHAR2(255) NOT NULL
);

ALTER TABLE ADDRESS ADD CONSTRAINT PK_ADDRESS PRIMARY KEY (
	ADDRESS_NO,
	ADDRESS_ID
);

ALTER TABLE ADDRESS ADD CONSTRAINT FK_MEMBER_TO_ADDRESS_1 FOREIGN KEY (
	ADDRESS_ID
)
REFERENCES MEMBER (
	MEMBER_ID
);

CREATE TABLE "CS_REQUEST" (
	"CS_REQUEST_NO"	NUMBER		NOT NULL,
	"MANAGER_ID"	VARCHAR2(30)		NOT NULL,
	"REQUEST_CONTENT"	CLOB		NOT NULL,
	"REQUEST_DATE"	DATE		NOT NULL
);

COMMENT ON COLUMN "CS_REQUEST"."CS_REQUEST_NO" IS '게시글 번호';

COMMENT ON COLUMN "CS_REQUEST"."MANAGER_ID" IS '관리자아이디';

COMMENT ON COLUMN "CS_REQUEST"."REQUEST_CONTENT" IS '답변내용';

COMMENT ON COLUMN "CS_REQUEST"."REQUEST_DATE" IS '답변일자';

ALTER TABLE "CS_REQUEST" ADD CONSTRAINT "PK_CS_REQUEST" PRIMARY KEY (
	"CS_REQUEST_NO"
);

ALTER TABLE "CS_REQUEST" ADD CONSTRAINT "FK_CS_BOARD_TO_CS_REQUEST_1" FOREIGN KEY (
	"CS_REQUEST_NO"
)
REFERENCES "CS_BOARD" (
	"CS_NO"
);

-- 회원 정보 MEMBER INSERT
INSERT INTO MEMBER VALUES ('USER01', '한호열', '$2a$10$oRdLtCg9ZWJYB27XLpkZMenwcEKe1psC1JOcLyM17tP.BNO8VYmam', 'tightPassion@naver.com',
                           '01012345678', SYSDATE, NULL,
                           DEFAULT, DEFAULT, '19821214', 'MEMBER');
INSERT INTO MEMBER VALUES ('USER02', '김정은', '$2a$10$YbNqx.iQZ4jicVYXfaqFn.mPvwSGf0Gq044qm3x/QEaARlla23Wuu', 'northBoss@naver.com',
                           '01023456789', SYSDATE, NULL,
                           DEFAULT, DEFAULT, '19840108', 'MEMBER');
INSERT INTO MEMBER VALUES ('USER03', '이지은', '$2a$10$f/Rdjzz/sXovi3e1Aj4LaOi8jKv49kjDE3DGJIlvdhUcQNLcudNpW', 'leeNow@naver.com',
                           '01034567890', SYSDATE, NULL,
                           DEFAULT, DEFAULT, '19930516', 'MANAGER');
INSERT INTO MEMBER VALUES ('USER04', '이찬혁', '$2a$10$hdOtSrU5W9j5erqqmq9R6.2oXbrSWj.3/zjAjoGB92wwt6g43vWwa', 'brothersuhyun@naver.com',
                           '01011112222', SYSDATE, NULL,
                           DEFAULT, DEFAULT, '19860912', 'MEMBER');
INSERT INTO MEMBER VALUES ('USER05', '아누팜', '$2a$10$z.j54bIq.MNKDY7TxMlMKOdx3HRtE8n4KYRYYPAgbwoljMYpeten6', 'salAli@naver.com',
                           '01012121212', SYSDATE, NULL,
                           DEFAULT, DEFAULT, '19881102', 'MEMBER');

INSERT INTO SHOES_CATEGORY VALUES(1, '나이키');
INSERT INTO SHOES_CATEGORY VALUES(2, '스캇');
INSERT INTO SHOES_CATEGORY VALUES(3, '사카이');
INSERT INTO SHOES_CATEGORY VALUES(4, 'Jordan');
INSERT INTO SHOES_CATEGORY VALUES(5, 'Dunk');

INSERT INTO BOARD_CATEGORY VALUES (1, '공지사항'); 
INSERT INTO BOARD_CATEGORY VALUES (2, 'FAQ'); 
INSERT INTO BOARD_CATEGORY VALUES (3, '리셀'); 

SET SERVEROUTPUT ON;
SET AUTOPRINT ON;

CREATE OR REPLACE PROCEDURE SHOES_EVENT_START
IS
AMOUNT_SHOES NUMBER;
EVENT_START_SHOES_NO NUMBER;
EVENT_START_SHOES_AMOUNT NUMBER;
EVENT_START_REAMANING_AMOUNT NUMBER;
WINNER_EVENT_NO NUMBER;
WINNER_EVENT_ID EVENT.EVENT_ID%TYPE;
WINNER_AMOUNT NUMBER;
BEGIN
  SELECT COUNT(*)
    INTO AMOUNT_SHOES
    FROM SHOES_INFO A
   WHERE A.SALES_YN = 'Y'
     AND A.EVENT_END_YN = 'N'
     AND A.WINNER_DATE < SYSDATE;
     DBMS_OUTPUT.PUT_LINE('Test1');
     DBMS_OUTPUT.PUT_LINE(AMOUNT_SHOES);
     
  FOR I IN 1..AMOUNT_SHOES
    LOOP
      SELECT B.SHOES_NO
           , B.SALES_AMOUNT
           , B.REAMANING_AMOUNT
        INTO EVENT_START_SHOES_NO
           , EVENT_START_SHOES_AMOUNT
           , EVENT_START_REAMANING_AMOUNT
        FROM (SELECT A.SHOES_NO 
                   , A.SALES_AMOUNT
                   , A.WINNER_DATE
                   , A.REAMANING_AMOUNT
                   , ROWNUM 번호
                FROM SHOES_INFO A
               WHERE A.SALES_YN = 'Y'
                 AND A.EVENT_END_YN = 'N'
                 AND A.WINNER_DATE < SYSDATE) B
       WHERE B.번호 = I;
        DBMS_OUTPUT.PUT_LINE('Test2');
        DBMS_OUTPUT.PUT_LINE(EVENT_START_SHOES_NO);
        DBMS_OUTPUT.PUT_LINE(EVENT_START_SHOES_AMOUNT);
        DBMS_OUTPUT.PUT_LINE(EVENT_START_REAMANING_AMOUNT);
               
      SELECT COUNT(*)
        INTO WINNER_AMOUNT
        FROM EVENT C
       WHERE C.EVENT_SHOES_ID = EVENT_START_SHOES_NO
         AND ROWNUM <= EVENT_START_REAMANING_AMOUNT
       ORDER BY C.RANDOM_NO;
       DBMS_OUTPUT.PUT_LINE('Test3');
       DBMS_OUTPUT.PUT_LINE(WINNER_AMOUNT);
       
       IF WINNER_AMOUNT >= 1 THEN
          FOR J IN 1..WINNER_AMOUNT
            LOOP
              
              SELECT 
                     F.EVENT_NO
                   , F.EVENT_ID
                INTO WINNER_EVENT_NO
                   , WINNER_EVENT_ID
                FROM (SELECT D.EVENT_NO
                           , D.EVENT_ID
                           , ROWNUM 번호
                        FROM EVENT D
                       WHERE D.EVENT_SHOES_ID = EVENT_START_SHOES_NO
                         AND ROWNUM <= EVENT_START_REAMANING_AMOUNT
                       ORDER BY D.RANDOM_NO) F
              WHERE 번호 = J;
              DBMS_OUTPUT.PUT_LINE('Test4');
              DBMS_OUTPUT.PUT_LINE(WINNER_EVENT_NO);
              DBMS_OUTPUT.PUT_LINE(WINNER_EVENT_ID);
              
              INSERT
                INTO WINNER A
                   (
                     A.WINNER_NO
                   , A.WINNER_ID
                   , A.WINNER_YN
                   , A.WINNER_DEADLINE
                   )
              VALUES 
                   (
                     WINNER_EVENT_NO
                   , WINNER_EVENT_ID
                   , 'N'
                   , SYSDATE + 7
                   );
              
              UPDATE EVENT
                 SET EVENT_STATUS = '2'
               WHERE EVENT_NO = WINNER_EVENT_NO;
               
              UPDATE SHOES_INFO A
                 SET A.REAMANING_AMOUNT = A.REAMANING_AMOUNT - 1
               WHERE A.SHOES_NO = EVENT_START_SHOES_NO;
               
            END LOOP;
            END IF;
            UPDATE SHOES_INFO
               SET EVENT_END_YN = 'Y'
             WHERE SHOES_NO = EVENT_START_SHOES_NO;
            DBMS_OUTPUT.PUT_LINE('Test5');
        END LOOP;
        COMMIT;
    EXCEPTION  WHEN no_data_found THEN NULL;
END;
/

BEGIN
    DBMS_SCHEDULER.CREATE_JOB
    (
    JOB_NAME => 'EX_JOB',
    JOB_TYPE => 'STORED_PROCEDURE',
    START_DATE => SYSDATE ,
    JOB_ACTION => 'SHOES_EVENT_START',
    REPEAT_INTERVAL => 'FREQ=MINUTELY; INTERVAL =1', --1분에 1번
    COMMENTS => '잡객체 1'
    );
    DBMS_SCHEDULER.ENABLE('EX_JOB');
END;
/

COMMIT;